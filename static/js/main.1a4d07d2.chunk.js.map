{"version":3,"sources":["../../React js/textutils/src/component/Navbar.js","../../React js/textutils/src/component/Alert.js","../../React js/textutils/src/component/TextForm.js","../../React js/textutils/src/App.js","../../React js/textutils/src/reportWebVitals.js","../../React js/textutils/src/index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","setTitle","type","onClick","toggleMode","role","id","htmlFor","txt","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","myhome","about","Alert","alert","msg","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","showAlert","newText","toUpperCase","newText2","toLocaleLowerCase","v","split","length","App","setmode","_useState3","_useState4","setTxt","_useState5","_useState6","setAlert","message","setTimeout","document","body","component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAIe,SAASA,EAAOC,GAG7B,OAEMC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OAC/EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,UAC5CP,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAAgD,SAAfL,EAAMM,KAAgB,QAAQ,OAA/D,MACZL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWC,QAAUV,EAAMW,WAAYC,KAAK,SAASC,GAAG,2BAClGZ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBU,QAAQ,0BAA5C,IAAuEd,EAAMe,IAA7E,eAEDd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASO,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1LnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,0BAC3CZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBiB,eAAa,OAAOd,KAAK,KAAKP,EAAMsB,SAErErB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBG,KAAK,KAAKP,EAAMuB,YCV1CC,MAdf,SAAexB,GAKb,OACEC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMyB,MAAMhB,KAA7B,gCAAiEG,KAAK,SACnFX,EAAAC,EAAAC,cAAA,cAASH,EAAMyB,MAAMhB,MADtB,MACwCT,EAAMyB,MAAMC,OCP5C,SAASC,EAAS3B,GAAO,IAAA4B,EACZC,mBAAS,mBADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACvBI,EADuBJ,EAAA,GAuBtC,OACE7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACAlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYgC,MAAQ,CAACC,MAAsB,SAAfrC,EAAMM,KAAgB,QAAQ,YACzEL,EAAAC,EAAAC,cAAA,UAAKH,EAAMsC,SACPrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAErBH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAemC,MAAQN,EAAMO,SAX1B,SAACC,GAElBP,EAAQO,EAAMC,OAAOH,QASgDH,MAAO,CAACO,gBAAiC,SAAf3C,EAAMM,KAAgB,OAAO,QAAQ+B,MAAsB,SAAfrC,EAAMM,KAAgB,QAAQ,WAAYO,GAAG,QAAQ+B,KAAK,MAC3M3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBM,QAlBpB,WAEjBwB,EADe,IAEflC,EAAM6C,UAAU,mBAAmB,aAevC,gBAGF5C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BM,QAhCtB,WAEjB,IAAIoC,EAAUb,EAAKc,cACnBb,EAAQY,GACR9C,EAAM6C,UAAU,2BAA2B,aA4BnD,wBAEA5C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BM,QA5BtB,WACnB,IAAIsC,EAAWf,EAAKgB,oBACpBf,EAAQc,GACRhD,EAAM6C,UAAU,2BAA2B,aAyBjD,yBAEA5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAgB8C,GAAC,EAACd,MAAO,CAACC,MAAsB,SAAfrC,EAAMM,KAAgB,QAAQ,YAC5EL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,aAAK8B,EAAKkB,MAAM,KAAKC,OAAO,EAA5B,cAA0CnB,EAAKmB,OAA/C,eACAnD,EAAAC,EAAAC,cAAA,SAAI,MAAQ8B,EAAKkB,MAAM,KAAKC,OAA5B,oBACAnD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAI8B,KCGSoB,MAzCf,WAAe,IAAAzB,EACUC,mBAAU,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNtB,EADMwB,EAAA,GACDwB,EADCxB,EAAA,GAAAyB,EAEQ1B,mBAAU,UAFlB2B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAENxC,EAFMyC,EAAA,GAEFC,EAFED,EAAA,GAAAE,EAGY7B,mBAAU,QAHtB8B,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAGNjC,EAHMkC,EAAA,GAGAC,EAHAD,EAAA,GAKPd,EAAW,SAAXA,EAAYgB,EAAQpD,GACtBmD,EAAS,CACPlC,IAAImC,EACJpD,KAAKA,IAEPqD,WAAW,WACTjB,EAAU,OACT,OAmBP,OACA5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAACJ,EAAD,CAAQS,SAAU,YAAYc,OAAS,UAAUC,MAAO,kBAAkBR,IAAKA,EAAKT,KAAMA,EAAMK,WAnBhF,WACH,UAATL,GACFgD,EAAQ,QACRG,EAAO,WACPM,SAASC,KAAK5B,MAAMO,gBAAiB,UACrCE,EAAU,yBAAyB,aAGnCS,EAAS,SACTG,EAAQ,UACRM,SAASC,KAAK5B,MAAMO,gBAAiB,QACrCE,EAAU,0BAA0B,eAStC5C,EAAAC,EAAAC,cAAC8D,EAAD,CAAOxC,MAAQA,IAEfxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,IAA4BH,EAAAC,EAAAC,cAACwB,EAAD,CAAUW,QAAS,4BAA4BO,UAAWA,EAAWvC,KAAMA,IAAvG,OChCW4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACHjF,EAAAC,EAAAC,cAACF,EAAAC,EAAMiF,WAAP,KACElF,EAAAC,EAAAC,cAACiF,EAAD,QAOJlB","file":"static/js/main.1a4d07d2.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Navbar(props) {\n\n\n  return (\n  \n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">{props.setTitle}</a>\n    <div className={`form-check form-switch text-${props.mode === 'dark'?'light':'dark'} `}>\n      <input className=\"form-check-input\" type=\"checkbox\" onClick ={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n     <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> {props.txt} Dark Mode</label>\n    </div>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    \n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.myhome}</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" href=\"/\">{props.about}</a>\n        </li>\n      </ul>\n      {/* <form className=\"d-flex\" role=\"search\"> \n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n      \n    </div>\n  </div>\n</nav>\n\n  )\n}\nNavbar.propTypes= {\nmyhome: PropTypes.string.isRequired,\nabout: PropTypes.string.isRequired,\nsetTitle: PropTypes.string.isRequired\n }","import React from 'react'\n\nfunction Alert(props) {\n    /*const capitalize = (word) =>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }*/\n  return (\n    <div>\n       <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\n        </div>\n    </div>\n  )\n}\n\nexport default Alert\n\n","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const [text, setText] = useState('Enter Text Here');\n    const handleUpClick =() => {\n        // console.log(\"Uppercase was Clicked\"+ text);\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"converted to Uppercase !\",\"success\");\n    }\n    const handleLoClick =() => {\n      let newText2 = text.toLocaleLowerCase();\n      setText(newText2);\n      props.showAlert(\"converted to Lowercase !\",\"success\");\n    }\n    const handleclear =() => {\n      let newText = ('');\n      setText(newText);\n      props.showAlert(\"Screen Cleared !\",\"success\");\n    }\n    const handleOnChange=(event) => {\n        // console.log(\"on change\");\n        setText(event.target.value)\n    }\n   \n  return (\n    <>\n    <div className=\"container\" style ={{color: props.mode === 'dark'?'white':'#042743'}}>\n    <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n\n  <textarea className=\"form-control\" value ={text} onChange={handleOnChange} style={{backgroundColor : props.mode === 'dark'?'grey':'white',color: props.mode === 'dark'?'white':'#042743'}} id=\"mybox\" rows=\"8\"></textarea>\n  <div className='container my-1'>\n  <button className=\"btn btn-primary m-2 \" onClick={handleclear}>Clear Text</button>\n  </div>\n</div>\n<button className=\"btn btn-primary btn-sm m-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n\n<button className=\"btn btn-primary btn-sm m-2\" onClick={handleLoClick} >Convert to Lowercase</button>\n</div>\n<div className=\"container my-3\"v style={{color: props.mode === 'dark'?'white':'#042743'}}>\n  <h2>Your text summary</h2>\n  <p> {text.split(\" \").length-1} words and {text.length} characters</p>\n  <p>{.0067 * text.split(\" \").length} Minutes to read</p>\n  <h2>Preview</h2>\n  <p>{text}</p>\n</div>\n\n</>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport Alert from './component/Alert';\nimport TextForm from './component/TextForm';\n\n\nfunction App() {\n  const [mode,setmode] = useState ('light'); \n  const [txt,setTxt] = useState (\"Enable\"); \n  const [alert,setAlert] = useState (\"null\");\n\n  const showAlert= (message,type) => {\n      setAlert({\n        msg:message,\n        type:type,\n      })\n      setTimeout(() => {\n        showAlert(null);\n      }, 1500);\n  }\n  const toggleMode =() => {\n    if (mode === 'light'){\n      setmode('dark');\n      setTxt(\"Disable\");\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark mode is enabled !\",\"success\");\n    }\n    else{\n      setmode ('light'); \n      setTxt (\"Enable\");\n      document.body.style.backgroundColor= 'white';\n      showAlert(\"Light mode is enabled !\",\"success\");\n    }\n  }\n  \n  \n  \n  return (\n  <>\n    <Navbar setTitle= \"TextUtils\" myhome = \"Account\" about =\"About TextUtils\" txt={txt} mode={mode} toggleMode={toggleMode}/>\n    <Alert alert= {alert}/>\n    {/* <About/> */}\n    <div className=\"container\"> <TextForm heading =\"Enter the Text to Analyze\" showAlert={showAlert} mode={mode}/> </div> \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}